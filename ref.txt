<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coding Patterns Progress Tracker</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc;
            color: #1e293b;
        }
        .pattern-card {
            transition: box-shadow 0.3s ease-in-out;
        }
        .pattern-card:hover {
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        }
        input[type="checkbox"]:checked + label {
            text-decoration: line-through;
            color: #64748b;
        }
        .progress-bar-fill {
            transition: width 0.5s ease-in-out;
        }
        .modal {
            transition: opacity 0.3s ease;
        }
        .modal-content {
            transition: transform 0.3s ease;
        }
        .loader {
            border-top-color: #3498db;
            animation: spin 1s ease-in-out infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>

    <div class="container mx-auto p-4 md:p-8 max-w-5xl">
        <header class="text-center mb-8">
            <h1 class="text-4xl font-bold tracking-tight text-slate-900">Coding Patterns Tracker</h1>
            <p class="text-slate-600 mt-2">Check off the problems as you complete them. Your progress is saved automatically.</p>
            <p><a href="https://github.com/dipjul/Grokking-the-Coding-Interview-Patterns-for-Coding-Questions?tab=readme-ov-file#coding-interview-patterns">GitHib ref</a></p>
            <button id="generatePlanBtn" class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                âœ¨ Generate My Study Plan
            </button>
        </header>

        <div id="progressTracker" class="bg-white p-4 rounded-xl shadow-md border border-slate-200 mb-8 sticky top-4 z-10">
            <div class="flex justify-between items-center mb-2">
                <h3 class="font-semibold text-slate-800">Overall Progress</h3>
                <span id="progressText" class="font-semibold text-slate-800">0 / 0</span>
            </div>
            <div class="w-full bg-slate-200 rounded-full h-2.5">
                <div id="progressBar" class="bg-blue-600 h-2.5 rounded-full progress-bar-fill" style="width: 0%"></div>
            </div>
        </div>

        <main id="patternsContainer" class="space-y-6">
            <!-- Patterns will be dynamically inserted here -->
        </main>
    </div>
    
    <!-- Modal for Gemini Response -->
    <div id="geminiModal" class="modal fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 flex items-center justify-center hidden">
        <div class="modal-content bg-white w-11/12 md:max-w-md mx-auto rounded-lg shadow-lg p-6 transform scale-95">
            <div class="flex justify-between items-center mb-4">
                <h3 id="modalTitle" class="text-xl font-semibold text-slate-800"></h3>
                <button id="closeModalBtn" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </div>
            <div id="modalBody" class="text-slate-600 space-y-4">
                <!-- Content will be injected here -->
            </div>
        </div>
    </div>


    <script>
        const patternsData = [
            { name: "Two Pointers", problems: [ { name: "Pair with Target Sum (easy)", url: "https://leetcode.com/problems/two-sum/" }, { name: "Remove Duplicates (easy)", url: "https://leetcode.com/problems/remove-duplicates-from-sorted-array/" }, { name: "Squaring a Sorted Array (easy)", url: "https://leetcode.com/problems/squares-of-a-sorted-array/" }, { name: "Triplet Sum to Zero (medium)", url: "https://leetcode.com/problems/3sum/" }, { name: "Triplet Sum Close to Target (medium)", url: "https://leetcode.com/problems/3sum-closest/" }, { name: "Triplets with Smaller Sum (medium)", url: "https://www.lintcode.com/problem/918/" }, { name: "Subarrays with Product Less than a Target (medium)", url: "https://leetcode.com/problems/subarray-product-less-than-k/" }, { name: "Dutch National Flag Problem (medium)", url: "https://www.coderbyte.com/algorithm/dutch-national-flag-sorting-problem" }, { name: "Problem Challenge 1: Quadruple Sum to Target (medium)", url: "https://leetcode.com/problems/4sum/" }, { name: "Problem Challenge 2: Comparing Strings containing Backspaces (medium)", url: "https://leetcode.com/problems/backspace-string-compare/" }, { name: "Problem Challenge 3: Minimum Window Sort (medium)", url: "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/" } ] },
            { name: "Fast & Slow pointers", problems: [ { name: "LinkedList Cycle (easy)", url: "https://leetcode.com/problems/linked-list-cycle/" }, { name: "Start of LinkedList Cycle (medium)", url: "https://leetcode.com/problems/linked-list-cycle-ii/" }, { name: "Happy Number (medium)", url: "https://leetcode.com/problems/happy-number/" }, { name: "Middle of the LinkedList (easy)", url: "https://leetcode.com/problems/middle-of-the-linked-list/" }, { name: "Problem Challenge 1: Palindrome LinkedList (medium)", url: "https://leetcode.com/problems/palindrome-linked-list/" }, { name: "Problem Challenge 2: Rearrange a LinkedList (medium)", url: "https://leetcode.com/problems/reorder-list/" }, { name: "Problem Challenge 3: Cycle in a Circular Array (hard)", url: "https://leetcode.com/problems/circular-array-loop/" } ] },
            { name: "Sliding Window", problems: [ { name: "Maximum Sum Subarray of Size K (easy)", url: "#" }, { name: "Smallest Subarray with a given sum (easy)", url: "https://www.educative.io/courses/grokking-the-coding-interview/7XMlMEQPnnQ" }, { name: "Longest Substring with K Distinct Characters (medium)", url: "https://www.educative.io/courses/grokking-the-coding-interview/gx2OqlvEnWG" }, { name: "Fruits into Baskets (medium)", url: "https://leetcode.com/problems/fruit-into-baskets/" }, { name: "No-repeat Substring (hard)", url: "https://leetcode.com/problems/longest-substring-without-repeating-characters/" }, { name: "Longest Substring with Same Letters after Replacement (hard)", url: "https://leetcode.com/problems/longest-repeating-character-replacement/" }, { name: "Longest Subarray with Ones after Replacement (hard)", url: "https://leetcode.com/problems/max-consecutive-ones-iii/" }, { name: "Problem Challenge 1: Permutation in a String (hard)", url: "https://leetcode.com/problems/permutation-in-string/" }, { name: "Problem Challenge 2: String Anagrams (hard)", url: "https://leetcode.com/problems/find-all-anagrams-in-a-string/" }, { name: "Problem Challenge 3: Smallest Window containing Substring (hard)", url: "https://leetcode.com/problems/minimum-window-substring/" }, { name: "Problem Challenge 4: Words Concatenation (hard)", url: "https://leetcode.com/problems/substring-with-concatenation-of-all-words/" } ] },
            { name: "Merge Intervals", problems: [ { name: "Merge Intervals (medium)", url: "https://leetcode.com/problems/merge-intervals/" }, { name: "Insert Interval (medium)", url: "https://leetcode.com/problems/insert-interval/" }, { name: "Intervals Intersection (medium)", url: "https://leetcode.com/problems/interval-list-intersections/" }, { name: "Conflicting Appointments (medium)", url: "https://www.geeksforgeeks.org/given-n-appointments-find-all-conflicting-appointments/" }, { name: "Problem Challenge 1: Minimum Meeting Rooms (hard)", url: "https://www.lintcode.com/problem/919/" }, { name: "Problem Challenge 2: Maximum CPU Load (hard)", url: "https://www.geeksforgeeks.org/find-maximum-cpu-load-from-given-list-of-jobs/" }, { name: "Problem Challenge 3: Employee Free Time (hard)", url: "https://leetcode.com/problems/employee-free-time/" } ] },
            { name: "Cyclic Sort", problems: [ { name: "Cyclic Sort (easy)", url: "https://www.geeksforgeeks.org/cyclic-sort/" }, { name: "Find the Missing Number (easy)", url: "https://leetcode.com/problems/missing-number/" }, { name: "Find all Missing Numbers (easy)", url: "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/" }, { name: "Find the Duplicate Number (easy)", url: "https://leetcode.com/problems/find-the-duplicate-number/" }, { name: "Find all Duplicate Numbers (easy)", url: "https://leetcode.com/problems/find-all-duplicates-in-an-array/" }, { name: "Problem Challenge 1: Find the Corrupt Pair (easy)", url: "https://www.thecodingsimplified.com/find-the-corrupt-pair-in-an-array/" }, { name: "Problem Challenge 2: Find the Smallest Missing Positive Number (medium)", url: "https://leetcode.com/problems/first-missing-positive/" }, { name: "Problem Challenge 3: Find the First K Missing Positive Numbers (hard)", url: "https://www.thecodingsimplified.com/find-the-first-k-missing-positive-numbers/" } ] },
            { name: "In-place Reversal of a LinkedList", problems: [ { name: "Reverse a LinkedList (easy)", url: "https://leetcode.com/problems/reverse-linked-list/" }, { name: "Reverse a Sub-list (medium)", url: "https://leetcode.com/problems/reverse-linked-list-ii/" }, { name: "Reverse every K-element Sub-list (medium)", url: "https://leetcode.com/problems/reverse-nodes-in-k-group/" }, { name: "Problem Challenge 1: Reverse alternating K-element Sub-list (medium)", url: "https://www.geeksforgeeks.org/reverse-alternate-k-nodes-in-a-singly-linked-list/" }, { name: "Problem Challenge 2: Rotate a LinkedList (medium)", url: "https://leetcode.com/problems/rotate-list/" } ] },
            { name: "Stack", problems: [ { name: "Balanced Parentheses", url: "https://leetcode.com/problems/valid-parentheses/" }, { name: "Reverse a String", url: "#" }, { name: "Decimal to Binary Conversion", url: "#" }, { name: "Next Greater Element I, II, III (Hard)", url: "https://leetcode.com/problems/next-greater-element-i/" }, { name: "Sorting a Stack", url: "#" }, { name: "Simplify Path", url: "https://leetcode.com/problems/simplify-path/" } ] },
            { name: "Monotonic Stack", problems: [ { name: "Next Greater Element I, II, III (Hard)", url: "https://leetcode.com/problems/next-greater-element-i/" }, { name: "Daily Temperatures (easy)", url: "https://leetcode.com/problems/daily-temperatures/" }, { name: "Remove Nodes From Linked List (medium)", url: "https://leetcode.com/problems/remove-nodes-from-linked-list/" }, { name: "Remove All Adjacent Duplicates In String (easy)", url: "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/" }, { name: "Remove All Adjacent Duplicates in String II (medium)", url: "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/" }, { name: "Remove K Digits (medium)", url: "https://leetcode.com/problems/remove-k-digits/" } ] },
            { name: "Hash Maps", problems: [ { name: "First Non-repeating Character (easy)", url: "https://leetcode.com/problems/first-unique-character-in-a-string/" }, { name: "Largest Unique Number (easy)", url: "https://leetcode.com/problems/largest-unique-number/" }, { name: "Maximum Number of Balloons (easy)", url: "https://leetcode.com/problems/maximum-number-of-balloons/" }, { name: "Longest Palindrome (easy)", url: "https://leetcode.com/problems/longest-palindrome/" }, { name: "Ransom Note (easy)", url: "https://leetcode.com/problems/ransom-note/" } ] },
            { name: "Tree Breadth First Search (BFS)", problems: [ { name: "Binary Tree Level Order Traversal (easy)", url: "https://leetcode.com/problems/binary-tree-level-order-traversal/" }, { name: "Reverse Level Order Traversal (easy)", url: "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/" }, { name: "Zigzag Traversal (medium)", url: "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/" }, { name: "Level Averages in a Binary Tree (easy)", url: "https://leetcode.com/problems/average-of-levels-in-binary-tree/" }, { name: "Minimum Depth of a Binary Tree (easy)", url: "https://leetcode.com/problems/minimum-depth-of-binary-tree/" }, { name: "Maximum Depth of a Binary Tree (easy)", url: "https://leetcode.com/problems/maximum-depth-of-binary-tree/" }, { name: "Level Order Successor (easy)", url: "https://www.geeksforgeeks.org/find-level-order-successor-of-a-given-node-in-binary-tree/" }, { name: "Connect Level Order Siblings (medium)", url: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/" }, { name: "Problem Challenge 1: Connect All Level Order Siblings (medium)", url: "https://www.educative.io/courses/grokking-the-coding-interview/m2YYxXDOJ03" }, { name: "Problem Challenge 2: Right View of a Binary Tree (easy)", url: "https://leetcode.com/problems/binary-tree-right-side-view/" } ] },
            { name: "Tree Depth First Search (DFS)", problems: [ { name: "Binary Tree Path Sum (easy)", url: "https://leetcode.com/problems/path-sum/" }, { name: "All Paths for a Sum (medium)", url: "https://leetcode.com/problems/path-sum-ii/" }, { name: "Sum of Path Numbers (medium)", url: "https://leetcode.com/problems/sum-root-to-leaf-numbers/" }, { name: "Path With Given Sequence (medium)", url: "https://www.geeksforgeeks.org/check-if-a-root-to-leaf-path-with-given-sequence-exists/" }, { name: "Count Paths for a Sum (medium)", url: "https://leetcode.com/problems/path-sum-iii/" }, { name: "Problem Challenge 1: Tree Diameter (medium)", url: "https://leetcode.com/problems/diameter-of-binary-tree/" }, { name: "Problem Challenge 2: Path with Maximum Sum (hard)", url: "https://leetcode.com/problems/binary-tree-maximum-path-sum/" } ] },
            { name: "Graphs", problems: [ { name: "Find if Path Exists in Graph (easy)", url: "https://leetcode.com/problems/find-if-path-exists-in-graph/" }, { name: "Number of Provinces (medium)", url: "https://leetcode.com/problems/number-of-provinces/" }, { name: "Minimum Number of Vertices to Reach All Nodes (medium)", url: "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/" } ] },
            { name: "Island (Matrix traversal)", problems: [ { name: "Number of Islands (medium)", url: "https://leetcode.com/problems/number-of-islands/" }, { name: "Max Area of Island (medium)", url: "https://leetcode.com/problems/max-area-of-island/" }, { name: "Flood Fill (easy)", url: "https://leetcode.com/problems/flood-fill/" }, { name: "Number of Closed Islands (medium)", url: "https://leetcode.com/problems/number-of-closed-islands/" } ] },
            { name: "Two Heaps", problems: [ { name: "Find the Median of a Number Stream (medium)", url: "https://leetcode.com/problems/find-median-from-data-stream/" }, { name: "Sliding Window Median (hard)", url: "https://leetcode.com/problems/sliding-window-median/" }, { name: "Maximize Capital (hard)", url: "https://leetcode.com/problems/ipo/" }, { name: "Maximum Sum Combinations (medium)", url: "https://www.interviewbit.com/problems/maximum-sum-combinations/" } ] },
            { name: "Subsets", problems: [ { name: "Subsets (easy)", url: "https://leetcode.com/problems/subsets/" }, { name: "Subsets With Duplicates (easy)", url: "https://leetcode.com/problems/subsets-ii/" }, { name: "Permutations (medium)", url: "https://leetcode.com/problems/permutations/" }, { name: "String Permutations by changing case (medium)", url: "https://leetcode.com/problems/letter-case-permutation/" }, { name: "Balanced Parentheses (hard)", url: "https://leetcode.com/problems/generate-parentheses/" }, { name: "Unique Generalized Abbreviations (hard)", url: "https://leetcode.com/problems/generalized-abbreviation/" } ] },
            { name: "Modified Binary Search", problems: [ { name: "Order-agnostic Binary Search (easy)", url: "https://www.geeksforgeeks.org/order-agnostic-binary-search/" }, { name: "Ceiling of a Number (medium)", url: "https://www.geeksforgeeks.org/ceiling-in-a-sorted-array/" }, { name: "Next Letter (medium)", url: "https://leetcode.com/problems/find-smallest-letter-greater-than-target/" }, { name: "Number Range (medium)", url: "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/" }, { name: "Search in a Sorted Infinite Array (medium)", url: "https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size/" }, { name: "Bitonic Array Maximum (easy)", url: "https://www.geeksforgeeks.org/find-the-maximum-element-in-an-array-which-is-first-increasing-and-then-decreasing/" }, { name: "Problem Challenge 1: Search Bitonic Array (medium)", url: "https://leetcode.com/problems/search-in-rotated-sorted-array/" }, { name: "Problem Challenge 2: Search in Rotated Array (medium)", url: "https://leetcode.com/problems/search-in-rotated-sorted-array/" }, { name: "Problem Challenge 3: Rotation Count (medium)", url: "https://www.geeksforgeeks.org/find-rotation-count-rotated-sorted-array/" }, { name: "Search a 2D Matrix (medium)", url: "https://leetcode.com/problems/search-a-2d-matrix/" }, { name: "Minimum Number of Days to Make m Bouquets (medium)", url: "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/" }, { name: "Koko Eating Bananas (medium)", url: "https://leetcode.com/problems/koko-eating-bananas/" }, { name: "Capacity To Ship Packages Within D Days (medium)", url: "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/" }, { name: "Median of Two Sorted Arrays (hard)", url: "https://leetcode.com/problems/median-of-two-sorted-arrays/" } ] },
            { name: "Bitwise XOR", problems: [ { name: "Single Number (easy)", url: "https://leetcode.com/problems/single-number/" }, { name: "Two Single Numbers (medium)", url: "https://leetcode.com/problems/single-number-iii/" }, { name: "Complement of Base 10 Number (easy)", url: "https://leetcode.com/problems/complement-of-base-10-integer/" }, { name: "Problem Challenge 1: Flip and Invert an Image (easy)", url: "https://leetcode.com/problems/flipping-an-image/" } ] },
            { name: "Top 'K' Elements", problems: [ { name: "Top 'K' Numbers (easy)", url: "#" }, { name: "Kth Smallest Number (easy)", url: "#" }, { name: "'K' Closest Points to the Origin (easy)", url: "https://leetcode.com/problems/k-closest-points-to-origin/" }, { name: "Connect Ropes (easy)", url: "#" }, { name: "Top 'K' Frequent Numbers (medium)", url: "https://leetcode.com/problems/top-k-frequent-elements/" }, { name: "Frequency Sort (medium)", url: "https://leetcode.com/problems/sort-characters-by-frequency/" }, { name: "Kth Largest Number in a Stream (medium)", url: "https://leetcode.com/problems/kth-largest-element-in-a-stream/" }, { name: "'K' Closest Numbers (medium)", url: "https://leetcode.com/problems/find-k-closest-elements/" }, { name: "Maximum Distinct Elements (medium)", url: "#" }, { name: "Sum of Elements (medium)", url: "#" }, { name: "Rearrange String (hard)", url: "https://leetcode.com/problems/reorganize-string/" }, { name: "Problem Challenge 1: Rearrange String K Distance Apart (hard)", url: "https://leetcode.com/problems/rearrange-string-k-distance-apart/" }, { name: "Problem Challenge 2: Scheduling Tasks (hard)", url: "https://leetcode.com/problems/task-scheduler/" }, { name: "Problem Challenge 3: Frequency Stack (hard)", url: "https://leetcode.com/problems/maximum-frequency-stack/" } ] },
            { name: "K-way merge", problems: [ { name: "Merge K Sorted Lists (medium)", url: "https://leetcode.com/problems/merge-k-sorted-lists/" }, { name: "Kth Smallest Number in M Sorted Lists (Medium)", url: "https://www.geeksforgeeks.org/kth-smallest-element-in-a-row-wise-and-column-wise-sorted-2d-array-set-1/" }, { name: "Kth Smallest Number in a Sorted Matrix (Hard)", url: "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/" }, { name: "Smallest Number Range (Hard)", url: "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/" }, { name: "Problem Challenge 1: K Pairs with Largest Sums (hard)", url: "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/" } ] },
            { name: "Greedy Algorithms", problems: [ { name: "Valid Palindrome II (easy)", url: "https://leetcode.com/problems/valid-palindrome-ii/" }, { name: "Maximum Length of Pair Chain (medium)", url: "https://leetcode.com/problems/maximum-length-of-pair-chain/" }, { name: "Minimum Add to Make Parentheses Valid (medium)", url: "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/" }, { name: "Remove Duplicate Letters (medium)", url: "https://leetcode.com/problems/remove-duplicate-letters/" }, { name: "Largest Palindromic Number (Medium)", url: "https://leetcode.com/problems/largest-palindromic-number/" }, { name: "Removing Minimum and Maximum From Array (medium)", url: "https://leetcode.com/problems/removing-minimum-and-maximum-from-array/" } ] },
            { name: "0/1 Knapsack (Dynamic Programming)", problems: [ { name: "0/1 Knapsack (medium)", url: "https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/" }, { name: "Equal Subset Sum Partition (medium)", url: "https://leetcode.com/problems/partition-equal-subset-sum/" }, { name: "Subset Sum (medium)", url: "https://www.geeksforgeeks.org/subset-sum-problem-dp-25/" }, { name: "Minimum Subset Sum Difference (hard)", url: "https://www.geeksforgeeks.org/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum/" }, { name: "Problem Challenge 1: Count of Subset Sum (hard)", url: "https://www.educative.io/courses/grokking-dynamic-programming-patterns-for-coding-interviews/qA5wW7R8p7O" }, { name: "Problem Challenge 2: Target Sum (hard)", url: "https://leetcode.com/problems/target-sum/" } ] },
            { name: "Backtracking", problems: [ { name: "Combination Sum I, II, III, IV", url: "https://leetcode.com/problems/combination-sum/" }, { name: "Word Search I, II (Hard)", url: "https://leetcode.com/problems/word-search/" }, { name: "Sudoku Solver (hard)", url: "https://leetcode.com/problems/sudoku-solver/" }, { name: "Factor Combinations (medium)", url: "https://leetcode.com/problems/factor-combinations/" }, { name: "Split a String Into the Max Number of Unique Substrings (medium)", url: "https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings/" } ] },
            { name: "Trie", problems: [ { name: "Implement Trie (Prefix Tree) (medium)", url: "https://leetcode.com/problems/implement-trie-prefix-tree/" }, { name: "Index Pairs of a String (easy)", url: "https://leetcode.com/problems/index-pairs-of-a-string/" }, { name: "Design Add and Search Words Data Structure (medium)", url: "https://leetcode.com/problems/design-add-and-search-words-data-structure/" }, { name: "Extra Characters in a String (medium)", url: "https://leetcode.com/problems/extra-characters-in-a-string/" }, { name: "Search Suggestions System (medium)", url: "https://leetcode.com/problems/search-suggestions-system/" } ] },
            { name: "Topological Sort (Graph)", problems: [ { name: "Topological Sort (medium)", url: "https://www.geeksforgeeks.org/topological-sorting/" }, { name: "Course Schedule (medium)", url: "https://leetcode.com/problems/course-schedule/" }, { name: "Course Schedule II (medium)", url: "https://leetcode.com/problems/course-schedule-ii/" }, { name: "All Tasks Scheduling Orders (hard)", url: "https://www.educative.io/courses/grokking-the-coding-interview/q2YmVjD6rPY" }, { name: "Alien Dictionary (hard)", url: "https://leetcode.com/problems/alien-dictionary/" }, { name: "Problem Challenge 1: Reconstructing a Sequence (hard)", url: "https://leetcode.com/problems/sequence-reconstruction/" }, { name: "Problem Challenge 2: Minimum Height Trees (hard)", url: "https://leetcode.com/problems/minimum-height-trees/" } ] },
            { name: "Union Find", problems: [ { name: "Redundant Connection I, II (Hard)", url: "https://leetcode.com/problems/redundant-connection/" }, { name: "Number of Provinces (medium)", url: "https://leetcode.com/problems/number-of-provinces/" }, { name: "Is Graph Bipartite? (medium)", url: "https://leetcode.com/problems/is-graph-bipartite/" }, { name: "Path With Minimum Effort (medium)", url: "https://leetcode.com/problems/path-with-minimum-effort/" } ] },
            { name: "Ordered Set", problems: [ { name: "Merge Similar Items (easy)", url: "https://leetcode.com/problems/merge-similar-items/" }, { name: "132 Pattern (medium)", url: "https://leetcode.com/problems/132-pattern/" }, { name: "My Calendar I, II, III (Hard)", url: "https://leetcode.com/problems/my-calendar-i/" }, { name: "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit (medium)", url: "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/" } ] },
            { name: "Multi-thread", problems: [ { name: "Same Tree (easy)", url: "https://leetcode.com/problems/same-tree/" }, { name: "Invert Binary Tree (easy)", url: "https://leetcode.com/problems/invert-binary-tree/" }, { name: "Binary Search Tree Iterator (medium)", url: "https://leetcode.com/problems/binary-search-tree-iterator/" } ] },
        ];

        const patternsContainer = document.getElementById('patternsContainer');
        const progressText = document.getElementById('progressText');
        const progressBar = document.getElementById('progressBar');
        const generatePlanBtn = document.getElementById('generatePlanBtn');
        const modal = document.getElementById('geminiModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalBody = document.getElementById('modalBody');
        const closeModalBtn = document.getElementById('closeModalBtn');
        const storageKey = 'codingPatternsProgress';

        let totalProblems = 0;
        let progress = {};

        function generateId(patternName, problemName) {
            return `${patternName}-${problemName}`.replace(/[^a-zA-Z0-9-]/g, '').toLowerCase();
        }
        
        async function callGeminiAPI(prompt, retries = 3, delay = 1000) {
            const apiKey = "AIzaSyCrrYTWLYcPHETbI2IiqZy0RCQ8-z-zOSQ"; 
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
            
            const payload = {
                contents: [{ role: "user", parts: [{ text: prompt }] }]
            };

            for (let i = 0; i < retries; i++) {
                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const result = await response.json();
                    if (result.candidates && result.candidates.length > 0 && result.candidates[0].content.parts.length > 0) {
                        return result.candidates[0].content.parts[0].text;
                    } else {
                        throw new Error("Invalid response structure from API.");
                    }
                } catch (error) {
                    if (i === retries - 1) {
                        console.error("API call failed after multiple retries:", error);
                        return "Sorry, I couldn't get a response. Please try again later.";
                    }
                    await new Promise(res => setTimeout(res, delay * Math.pow(2, i)));
                }
            }
        }
        
        function showModal(title, content) {
            modalTitle.textContent = title;
            modalBody.innerHTML = content.replace(/\n/g, '<br>');
            modal.classList.remove('hidden');
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modal.querySelector('.modal-content').classList.remove('scale-95');
                modal.classList.add('opacity-100');
                modal.querySelector('.modal-content').classList.add('scale-100');
            }, 10);
        }

        function hideModal() {
            modal.classList.add('opacity-0');
            modal.querySelector('.modal-content').classList.add('scale-95');
            setTimeout(() => modal.classList.add('hidden'), 300);
        }

        function showLoading() {
            modalBody.innerHTML = '<div class="flex justify-center items-center p-4"><div class="loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12"></div></div>';
        }

        async function handleExplainPattern(patternName) {
            showModal(`Explaining: ${patternName}`, '');
            showLoading();
            const prompt = `Explain the coding pattern "${patternName}" in a simple and concise way for someone preparing for a coding interview. Describe what it is, its common use cases, and why it's an effective technique.`;
            const explanation = await callGeminiAPI(prompt);
            showModal(`Explaining: ${patternName}`, explanation);
        }
        
        async function handleGeneratePlan() {
            showModal("Your Personalized Study Plan", '');
            showLoading();
            
            let completedProblems = [];
            let incompletePatterns = new Set(patternsData.map(p => p.name));

            patternsData.forEach(pattern => {
                let patternCompletedCount = 0;
                pattern.problems.forEach(problem => {
                    const problemId = generateId(pattern.name, problem.name);
                    if (progress[problemId]) {
                        completedProblems.push(`${pattern.name}: ${problem.name}`);
                        patternCompletedCount++;
                    }
                });
                if (patternCompletedCount === pattern.problems.length) {
                    incompletePatterns.delete(pattern.name);
                }
            });

            const prompt = `I am preparing for coding interviews. Here is my progress so far:\n\nCompleted Problems:\n${completedProblems.join('\n') || 'None yet.'}\n\nBased on this, generate a personalized study plan for me. Suggest which patterns or types of problems I should focus on next. Keep the plan concise and actionable. The remaining patterns to study are: ${Array.from(incompletePatterns).join(', ')}.`;
            const plan = await callGeminiAPI(prompt);
            showModal("Your Personalized Study Plan", plan);
        }

        function loadProgress() {
            const savedProgress = localStorage.getItem(storageKey);
            progress = savedProgress ? JSON.parse(savedProgress) : {};
        }

        function saveProgress() {
            localStorage.setItem(storageKey, JSON.stringify(progress));
        }

        function updateProgressTracker() {
            const checkedCount = Object.values(progress).filter(Boolean).length;
            const percentage = totalProblems > 0 ? (checkedCount / totalProblems) * 100 : 0;
            
            progressText.textContent = `${checkedCount} / ${totalProblems}`;
            progressBar.style.width = `${percentage}%`;
        }

        function renderPatterns() {
            patternsData.forEach(pattern => {
                totalProblems += pattern.problems.length;

                const problemsHTML = pattern.problems.map(problem => {
                    const problemId = generateId(pattern.name, problem.name);
                    const isChecked = progress[problemId] || false;
                    
                    return `
                        <li class="flex items-center">
                            <input type="checkbox" id="${problemId}" data-id="${problemId}" class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500" ${isChecked ? 'checked' : ''}>
                            <label for="${problemId}" class="ml-3 min-w-0 flex-1 text-slate-700">
                                <a href="${problem.url}" target="_blank" rel="noopener noreferrer" class="hover:underline">${problem.name}</a>
                            </label>
                        </li>
                    `;
                }).join('');

                const patternCard = document.createElement('div');
                patternCard.className = 'pattern-card bg-white p-6 rounded-xl shadow-md border border-slate-200';
                patternCard.innerHTML = `
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-2xl font-bold text-slate-800">${pattern.name}</h2>
                        <button data-pattern-name="${pattern.name}" class="explain-btn inline-flex items-center px-3 py-1.5 border border-slate-300 text-xs font-medium rounded-md text-slate-700 bg-white hover:bg-slate-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            âœ¨ Explain Pattern
                        </button>
                    </div>
                    <ul class="space-y-3">${problemsHTML}</ul>
                `;
                patternsContainer.appendChild(patternCard);
            });
        }

        patternsContainer.addEventListener('change', (e) => {
            if (e.target.type === 'checkbox') {
                const id = e.target.dataset.id;
                progress[id] = e.target.checked;
                saveProgress();
                updateProgressTracker();
            }
        });

        patternsContainer.addEventListener('click', (e) => {
            if (e.target.classList.contains('explain-btn')) {
                const patternName = e.target.dataset.patternName;
                handleExplainPattern(patternName);
            }
        });

        generatePlanBtn.addEventListener('click', handleGeneratePlan);
        closeModalBtn.addEventListener('click', hideModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                hideModal();
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            loadProgress();
            renderPatterns();
            updateProgressTracker();
        });

    </script>
</body>
</html>
